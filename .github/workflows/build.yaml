name: "Build Game"
on:
  release:
    types: [published]
jobs:
  build-game:
    runs-on: windows-latest
    permissions:
      contents: write  # Needed for release upload
    defaults:
      run:
        shell: powershell
    steps:
      - name: Checkout files
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install nuitka

          python -m pip install -r requirements.txt
          python -m pip install "https://github.com/toontown-archipelago/panda3d/releases/latest/download/panda3d-1.11.0-cp311-cp311-win_amd64.whl"

      - name: Build Client
        run: |
          python -m nuitka ./launch/launcher/launch.py --standalone --output-dir=output --include-package=direct.distributed --include-package=otp --include-package=toontown --assume-yes-for-downloads

      - name: Build APWorld Files
        run: |
          cd apworld
          .\make_apworld.bat

      - name: Copy Built Files
        run: |
          New-Item -Name "release" -ItemType "directory"
          Copy-Item -Path "output\launch.dist" -Destination "release\game" -Recurse

      - name: Build & Copy Resources
        run: |
          New-Item -Name "release\game\resources" -ItemType "directory"
          cd resources
          Get-ChildItem -Directory | ForEach-Object { multify.exe -c -f "../release/game/resources/$($_.Name).mf" $_.Name }

      - name: Copy Config Files
        run: |
          New-Item -Name "release\game\config" -ItemType "directory"
          Copy-Item -Path "config\production.prc" -Destination "release\game\config\"
          Copy-Item -Path "config\common.prc" -Destination "release\game\config\"

      - name: Copy Scripts
        run: |
          Get-ChildItem build\scripts -Filter *.bat | ForEach-Object { Copy-Item -Path $_.FullName -Destination "release\" }
      - name: Copy Astron
        run: |
          Copy-Item -Path "astron" -Destination "release\game" -Recurse

      - name: Compress Release
        run: |
          Compress-Archive -Path release\* -DestinationPath TTAP.zip

      - name: Upload Game Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "TTAP.zip"
          path: "TTAP.zip"
          if-no-files-found: "error"

      - name: Upload APWorld Files to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} ./apworld/toontown.apworld
          gh release upload ${{ github.ref_name }} ./apworld/EXAMPLE_TOONTOWN.yaml

      - name: Upload Game to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} TTAP.zip

# add build for macOS
  build-game-macos:
    runs-on: macos-latest
    permissions:
      contents: write  # Needed for release upload
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout files
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install nuitka
          python -m pip install -r requirements.txt
          brew install wget
          # will change this to official repo once the changes are merged 
          python -m pip install "https://github.com/toontown-archipelago/panda3d/releases/latest/download/panda3d-1.11.0-cp311-cp311-macosx_10_9_universal2.whl"

      - name: Build Client
        run: |
          python -m nuitka ./launch/launcher/launch.py --standalone --output-dir=output_arm64 --include-package=direct.distributed --include-package=otp --include-package=toontown --assume-yes-for-downloads
          python -m nuitka ./launch/launcher/launch.py --standalone --output-dir=output_x86_64 --include-package=direct.distributed --include-package=otp --include-package=toontown --assume-yes-for-downloads --macos-target-arch=x86_64



      - name: Copy Built Files
        run: |
          # combine the binaries from both folders into a universal2 folder
          mkdir output_universal
          mkdir release
          cp -r output_arm64/launch.dist output_arm64/unzipped
          cp -r output_x86_64/launch.dist output_x86_64/unzipped
          lipo -create output_arm64/unzipped/launch.bin output_x86_64/unzipped/launch.bin -output output_universal/launch.bin
          # go through the folder and searh for each dylib, .so(search subdirectories too) and the Python file , and lipo them into universal2 folder
          find output_arm64/unzipped -type f \( -name "*.dylib" -o -name "*.so" \) -exec bash -c '
            f_arm64="$1"
            sub_dir="${f_arm64#output_arm64/unzipped/}"
            sub_dir="$(dirname "$sub_dir")"
            f_x86_64="output_x86_64/unzipped/$sub_dir/$(basename "$f_arm64")"
            f_universal="output_universal/$sub_dir/$(basename "$f_arm64")"
            mkdir -p "output_x86_64/unzipped/$sub_dir"
            mkdir -p "output_universal/$sub_dir"
            # make sure it exists in x86_64 folder
            if [ -f "$f_x86_64" ]; then
              lipo -create "$f_arm64" "$f_x86_64" -output "$f_universal"
            fi
           
          ' bash {} \;
          lipo -create output_arm64/unzipped/Python output_x86_64/unzipped/Python -output output_universal/Python
          cp -r output_universal release/game
          # rename launch.bin to launch
          mv release/game/launch.bin release/game/launch
          cp $pythonLocation/lib/python3.11/site-packages/panda3d/libpandaphysics.1.11.dylib release/game


      - name: Build & Copy Resources
        run: |
          wget https://www.panda3d.org/download/panda3d-1.10.14/Panda3D-SDK-1.10.14-MacOSX10.9.dmg
          hdiutil attach Panda3D-SDK-1.10.14-MacOSX10.9.dmg
          sudo installer -pkg 	"/Volumes/Panda3D SDK 1.10.14/Panda3D.mpkg" -target  /
          mkdir release/game/resources
          cd resources
          for dir in */; do /Library/Developer/Panda3D/bin/multify -c -f "../release/game/resources/${dir%/}.mf" ${dir%/}; done
      - name: Copy Config Files
        run: |
          mkdir release/game/config
          cp config/production.prc release/game/config/
          cp config/common.prc release/game/config/

      - name: Copy Scripts
        run: |
          # copy the .sh files
          cp build/scripts/*.sh release/

      - name: Copy Astron
        run: |
           cp -r astron release/game
           

      - name: Compress Release
        run: |
          zip -r TTAP-macos.zip release
      - name: Upload Game Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "TTAP-macos.zip"
          path: "TTAP-macos.zip"
          if-no-files-found: "error"    

      - name: Upload Game to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            gh release upload ${{ github.ref_name }} TTAP-macos.zip
